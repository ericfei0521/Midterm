{"version":3,"sources":["component/todoInput.jsx","component/todoListItem.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoInput","addList","useState","name","setName","type","onChange","e","target","value","onClick","TodoItem","title","App","lists","setLists","map","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAoBeA,MAlBf,YAA+B,IAAXC,EAAU,EAAVA,QAAU,EACNC,qBADM,mBACvBC,EADuB,KACjBC,EADiB,KAE5B,OACA,gCACC,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEC,OAAOC,QAAQA,MAAON,IACpE,wBACAO,QAAU,WACRT,EAAQE,GACRC,EAAQ,KAHV,wBCEYO,EAPE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,8BACGA,KCeMC,MAff,WAAgB,IAAD,EACWX,mBAAS,IADpB,mBACRY,EADQ,KACDC,EADC,KAKb,OACE,gCACE,cAAC,EAAD,CAAWd,QALC,SAACW,GACfG,EAAS,GAAD,mBAAKD,GAAL,CAAYF,QAKjBE,EAAME,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAUL,MAAOK,WCFVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86bd10bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction TodoInput({addList}) {\r\n  let [name, setName] = useState()\r\n  return(\r\n  <div>\r\n   <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\r\n   <button\r\n   onClick ={()=>{\r\n     addList(name)\r\n     setName(\"\")\r\n   }}\r\n   >\r\n     Submit\r\n   </button>\r\n  </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TodoInput\r\n","import React from 'react'\r\n\r\nconst TodoItem = ({ title }) => {\r\n    return (\r\n      <div>\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\nexport default TodoItem","import React, { useState } from 'react'\r\n\r\nimport TodoInput from './component/todoInput'\r\nimport TodoItem from './component/todoListItem'\r\n\r\nfunction App() {\r\n  let [lists, setLists] = useState([])\r\n  const addList = (title) => {\r\n    setLists([...lists, title])\r\n  }\r\n  return (\r\n    <div>\r\n      <TodoInput addList={addList} />\r\n      {lists.map((list) => (\r\n        <TodoItem title={list} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}